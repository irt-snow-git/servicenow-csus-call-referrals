<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_ui_script">
    <sys_ui_script action="INSERT_OR_UPDATE">
        <active>true</active>
        <description>Controller for call referral UI page</description>
        <global>false</global>
        <name>x_casus_callref.angular_controller</name>
        <script><![CDATA[var myApp = angular.module('myApp', []);
var departmentReferences = [];
departmentReferences = getDepartmentReferences(); 
console.log(departmentReferences);
// - - - Begin Controller - - - //
myApp.controller('CallReferralsController', ['$scope', function ($scope) {
    
	$scope.async = 0;
	$scope.departmentsAll = [];
	$scope.buttonCSS = "btn-grey btn btn-lg col-sm-11";
	$scope.pinCSS = "btn btn-pin col-sm-1";
	$scope.depts = [];
	$scope.depts = departmentReferences;
	$scope.async = 1;
	// - - - -End Init - - - -//
	
	
	$scope.setActiveButton = function(dept, button) {
		
	};
	$scope.pin = function (dept) {			
			
	};
	//Calls script include to submit records manually
	$scope.submit = function (dept) {			
			//Call to server to actually submit
			var ajax = new GlideAjax('x_casus_callref.retrieveSubmitRecords');
			ajax.addParam('sysparm_name','submitRecord');
			ajax.addParam('sysparm_department', dept);
			ajax.getXML(function ()  {
			});
	};
}])// - - -END Controller- - - //


;//- - - - -End App- - - - -//


// - - - Handlers and Other Functions - - - //

//Handles the XML call that retrieves supply sys_ids and supply_types
//Assigns them to dat global supplyReferences 
function handleGetDepartments(response) {
	var departments = response.responseXML.getElementsByTagName("department");
	for (var i = 0; i < departments.length; i++ ) {
		//Temp object to push
		var ref = {
			"sys_id":"",
			"popularity":"",
			"name":""
		};
		//Fill temp obj with values from XML
		ref.sys_id = departments[i].getAttribute("sys_id");
		ref.name = departments[i].getAttribute("name");
		ref.popularity = departments[i].getAttribute("popularity");
		departmentReferences.push(ref);
	}//End For
	
}

// - - - - End Handlers - - - - //

/*
Uses a global variable to store all the supplies
*/
function getDepartmentReferences() {
	var ajax = new GlideAjax('x_casus_callref.retrieveSubmitRecords');
	ajax.addParam('sysparm_name','getDepartments');
	ajax.getXML(handleGetDepartments);
	ajax.getXMLWait();
	//Now references should be set and angular can use them
	return departmentReferences;
}]]></script>
        <script_name>angular_controller</script_name>
        <sys_class_name>sys_ui_script</sys_class_name>
        <sys_created_by>gg622</sys_created_by>
        <sys_created_on>2017-06-08 20:24:34</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_id>91ded6e46f1bb600ad6cd4a21c3ee4fa</sys_id>
        <sys_mod_count>24</sys_mod_count>
        <sys_name>x_casus_callref.angular_controller</sys_name>
        <sys_package display_value="Service Desk Call Referrals" source="x_casus_callref">158840a62b69e2009ecc78cef6da155d</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Service Desk Call Referrals">158840a62b69e2009ecc78cef6da155d</sys_scope>
        <sys_update_name>sys_ui_script_91ded6e46f1bb600ad6cd4a21c3ee4fa</sys_update_name>
        <sys_updated_by>gg622</sys_updated_by>
        <sys_updated_on>2017-06-22 19:30:37</sys_updated_on>
        <use_scoped_format>false</use_scoped_format>
    </sys_ui_script>
</record_update>
